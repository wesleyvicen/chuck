# Application specific stuff
application.base_url = api.chucknorris.io

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:postgresql://localhost:5432/chuck
spring.datasource.username = postgres
spring.datasource.password = postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# org.postgresql.jdbc.PgConnection.createClob() is not yet implemented
# @See https://github.com/pgjdbc/pgjdbc/issues/1102
# @See https://github.com/pgjdbc/pgjdbc/pull/1272
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

# Swagger config
springfox.documentation.swagger.v2.path = /documentation

# Jackson
spring.jackson.date-format = yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
spring.jackson.time-zone = UTC

# Slack
slack.oauth.access_token = xxxx-xxxxxxxxxxx-xxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
slack.oauth.client_id = xxxxxxxxxxx.xxxxxxxxxxxx
slack.oauth.client_secret = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
slack.oauth.redirect_uri = https://api.chucknorris.io/connect/slack
slack.content.whitelisted_categories = career,dev,fashion,food,money,movie,travel

# AWS
aws.access_key_id = xxxxxxxxxxxxxxxxxxxx
aws.access_key_secret = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
aws.region = xx-xxxx-x

# The Daily Chuck
dailychuck.bucket_name = io.chucknorris.api
dailychuck.key_name = newsletter/example/dailychuck/index.json

# Event
application.event.sns_topic_arn = arn:aws:sns:xx-xxxx-x:xxxxxxxxxxxx:chucknorris_sys

# Mailchimp
mailchimp.api_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
mailchimp.dailychuck.list_id = xxxxxxxxxx